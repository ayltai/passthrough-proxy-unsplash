name: CD
on:
  release:
    types:
      - created
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ~1.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Initialize
        run: terraform init
        working-directory: terraform/remote
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: main
      - name: Format
        run: terraform fmt -check
        working-directory: terraform/remote
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: main
      - name: Validate
        run: terraform validate -no-color
        working-directory: terraform/remote
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: main
      - name: Create varrable file
        run: echo "$TERRAFORM_VARIABLES" > terraform/remote/secrets.tfvars
        env:
          TERRAFORM_VARIABLES: ${{ secrets.TERRAFORM_VARIABLES }}
      - name: Plan
        run: terraform plan -var-file=secrets.tfvars -lock-timeout=300s -out=main -no-color
        working-directory: terraform/remote
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: main
      - name: Apply
        run: terraform apply -lock-timeout=300s -auto-approve main
        working-directory: terraform/remote
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: main
      - name: Export REST API URL
        run: echo REST_API_URL="$(cat rest_api_url.txt)/photos/random?client_id=${{ secrets.API_KEY_UNSPLASH }}" >> $GITHUB_ENV
        working-directory: terraform/remote
      - name: Test the API endpoint
        run: curl ${{ env.REST_API_URL }}
        working-directory: terraform/remote
